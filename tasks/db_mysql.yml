---
- name: "[mySQL] - Service is installed."
  ansible.builtin.package:
    name: "{{ 'default-' if ((ansible_distribution|lower) == 'debian' and nextcloud_db_backend == 'mysql') else '' }}{{ nextcloud_db_backend }}-server"
    state: present
  register: nc_mysql_db_install

- name: "[mySQL] - Packages are installed."
  ansible.builtin.package:
    name: "{{ nc_mysql_deps }}"
    state: present
  vars:
    nc_mysql_deps:
      - "php{{ php_ver }}-mysql"
      - "python3-pymysql"

- name: "[mySQL] - Ensure MySQL is started and enabled on boot."
  ansible.builtin.service:
    name: "{{ mysql_daemon }}"
    state: started
    enabled: "{{ nextcloud_db_enabled_on_startup }}"
  register: mysql_service_configuration

- name: "[mySQL] - Generate {{ nextcloud_db_backend }} root password."
  ansible.builtin.set_fact:
    nextcloud_mysql_root_pwd: "{{ lookup( 'password', 'nextcloud_instances/'+ nextcloud_instance_name +'/mysql_root.pwd' ) }}"
  when: nextcloud_mysql_root_pwd is not defined and nextcloud_mysql_root_pwd_update

- name: "[mySQL] - Get list of hosts for the root user."
  ansible.builtin.command: mysql -NBe
    "SELECT Host
    FROM mysql.user
    WHERE User = 'root'
    ORDER BY (Host='localhost') ASC"
  register: mysql_root_hosts
  changed_when: false
  check_mode: false
  when: nextcloud_mysql_root_pwd_update

- name: "[mySQL] - Update MySQL root password for localhost root account."
  ansible.builtin.shell: >
    mysql -u root -NBe
    'ALTER USER "root"@"{{ item }}"
    IDENTIFIED WITH mysql_native_password BY "{{ mysql_root_password }}"; FLUSH PRIVILEGES;'
  with_items: "{{ mysql_root_hosts.stdout_lines|default([]) }}"
  when: nextcloud_mysql_root_pwd_update

- name: "[mySQL] - Save {{ nextcloud_db_backend }} root password in config file"
  ini_file:
    path: "{{ mysql_credential_file[(ansible_os_family|lower)] }}"
    section: client
    option: password
    value: "{{ nextcloud_mysql_root_pwd }}"
    mode: 0600
  no_log: true
  when: mysql_credential_file[(ansible_os_family|lower)] is defined and nextcloud_mysql_root_pwd_update

- name: "[mySQL] - Get list of hosts for the anonymous user."
  ansible.builtin.command: mysql -NBe 'SELECT Host FROM mysql.user WHERE User = ""'
  register: mysql_anonymous_hosts
  changed_when: false
  check_mode: false

- name: "[mySQL] - Remove anonymous MySQL users."
  mysql_user:
    name: ""
    host: "{{ item }}"
    state: absent
  with_items: "{{ mysql_anonymous_hosts.stdout_lines|default([]) }}"

- name: "[mySQL] - Remove MySQL test database."
  mysql_db:
    name: 'test'
    state: absent

- name: "[mySQL] - Set mysql config option for Nextcloud"
  ansible.builtin.copy:
    dest: /etc/mysql/conf.d/nextcloud.cnf
    src: files/mysql_nextcloud.cnf
    mode: 0600
  notify: restart mysql

- name: "[mySQL] - Generate database user Password."
  ansible.builtin.set_fact:
    nextcloud_db_pwd: "{{ lookup( 'password', 'nextcloud_instances/'+ nextcloud_instance_name +'/db_admin.pwd' ) }}"
  when: nextcloud_db_pwd is not defined

- name: "[mySQL] - Add Database {{ nextcloud_db_name }}."
  mysql_db:
    name: "{{ nextcloud_db_name }}"
    login_user: root
    login_password: "{{ nextcloud_mysql_root_pwd }}"
    config_file: "{{ mysql_credential_file[(ansible_os_family|lower)] | default(omit) }}"
    state: present

- name: "[mySQL] - Configure the database user."
  mysql_user:
    name: "{{ nextcloud_db_admin }}"
    password: "{{ nextcloud_db_pwd }}"
    priv: "{{ nextcloud_db_name }}.*:ALL"
    login_user: root
    login_password: "{{ nextcloud_mysql_root_pwd }}"
    config_file: "{{ mysql_credential_file[(ansible_os_family|lower)] | default(omit) }}"
    state: present
